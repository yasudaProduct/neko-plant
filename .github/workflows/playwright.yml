name: Playwright Tests
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
jobs:
  e2e:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22.14.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: "npm"
          cache-dependency-path: ./package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Start Supabase
        run: |
          supabase start -x studio,edge-runtime,imgproxy,inbucket
          supabase status --output env >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_URL=$SUPABASE_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> $GITHUB_ENV

      - name: Wait for Supabase API
        run: |
          for i in {1..60}; do
            curl -sf http://127.0.0.1:54321/health && break
            sleep 2
          done

      - name: Reset DB (migrate + seed)
        run: supabase db reset --force

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Prepare .env.local for app and seeding
        run: |
          cat > .env.local << 'EOF'
          NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
          SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
          DATABASE_URL=${DATABASE_URL}
          E2E_TEST_USER_ADDRESS=test@example.com
          E2E_TEST_USER_PASSWORD=password
          E2E_TEST_ADMIN_ADDRESS=admin@example.com
          E2E_TEST_ADMIN_PASSWORD=adminpass
          EOF

      - name: Seed data for E2E
        run: npm run seed:e2e

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        env:
          CI: true
        run: npm run e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

  # test:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-node@v4
  #     with:
  #       node-version: lts/*
  #   - name: Install dependencies
  #     run: npm ci
  #   - name: Install Playwright Browsers
  #     run: npx playwright install --with-deps
  #   - name: Run Playwright tests
  #     run: npx playwright test
  #   - uses: actions/upload-artifact@v4
  #     if: ${{ !cancelled() }}
  #     with:
  #       name: playwright-report
  #       path: playwright-report/
  #       retention-days: 30
